name: Test searching file

on:
  push:
    branches:
      - main

jobs:

  list_environments:
    name: Ask API for details of environments
    needs:
      - integrity
    runs-on: ubuntu-latest

    steps:

      # Get API access token and verify it.
      - name: Obtaino JWT Token
        id: jwt_token
        run: |
          response=$(curl -i \
          -H "Accept: application/json; charset=utf-8" \
          -X POST https://api.${{ secrets.HOST }}/v3/authn/access_token \
          -d '{ "username": "${{ env.USERNAME }}", "password": "${{ env.PASSWORD }}" }')
          token=$(echo $response | awk 'match($0, /access_token":"[^"]+"/) {print substr($0, RSTART+15)}' | cut -d '"' -f 1 )
          refresh=$(echo $response | awk 'match($0, /refresh_token":"[^"]+"/) {print substr($0, RSTART+16)}' | cut -d '"' -f 1 )
          echo "::set-output name=token::$token"
          echo "::set-output name=refresh::$refresh"
        env:
          USERNAME: ${{ secrets.MISSION_CONTROL_API_USERNAME }}
          PASSWORD: ${{ secrets.MISSION_CONTROL_API_PASSWORD }}
      - name: Verify JWT Token
        id: jwt_token_verify
        run: |
          code=$(curl -L \
          -H "Accept: application/json; charset=utf-8" \
          -H "Authorization: Bearer ${{ steps.jwt_token.outputs.token }}" \
          -X GET https://api.${{ secrets.HOST }}/v3/authn/verify_token \
          -o /dev/null -w '%{http_code}\n' -s)
          echo "::set-output name=code::$code"
      - name: Check Response Code from Verify JWT Token
        if: ${{ steps.jwt_token_verify.outputs.code != 200 }}
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('The JWT token failed verification!')


      # File Details
      - name: Request Application Configuration Files' Details
        id: files
        run: |
          response=$(curl \
          -H "Authorization: Bearer ${{ steps.jwt_token.outputs.token }}" \
          -X GET https://api.${{ secrets.HOST }}/v3/appconfigfiles)
          echo "::set-output name=details::${response//'"'/'\"'}"

      # ${{steps.files.outputs.details}}

      - name: print files object
        run: echo ${{steps.files.outputs.details}}


      # End
      - name: Slack message (failed end message)
        if: ${{ always() }}
        uses: muinmomin/webhook-action@v1.0.0
        env:
          GITHUB_WORKFLOW_URL: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        with:
          url: ${{ env.SLACK_WEBHOOK }}
          data: '{ "channel": "${{ env.CHANNEL_ID }}", "text": "Finished", "attachments": [{ "text" : "End of communication. The logs are here ${{ env.GITHUB_WORKFLOW_URL }}",  "color": "#005EB8" }] }'